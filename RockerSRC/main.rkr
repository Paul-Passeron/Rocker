//-----------------------------------------------------------------------------
//  ROCKER COMPILER
//  MIT License
//  Copyright (c) 2024 Paul Passeron
//-----------------------------------------------------------------------------

// Compiler of Rocker programming 
// language written in itself !

include "RockerSRC/stdlib.rkr"
include "RockerSRC/lexer.rkr"
include "RockerSRC/parser.rkr"
include "RockerSRC/generator.rkr"

let usage(prog_name: string): void => {
    print("Usage:\n");
    printf(string_to_cstr("\t%s <input file> [output file]\n"),
           string_to_cstr(prog_name));
}

let main(): void => {
    let args: string [] => get_args();
    if get_length(args) < 2 then{
        usage(get(args, 0));
        exit(1);
    }
    let filename: string => get(args, 1);
    let l: lexer => new_lexer(filename);
    lex_program(l);
    let toks: token[] => l::Toks;
    let p: parser => new_parser(toks);
    parse_program(p);
    // let prog: ast [] => p::Prog::Data::data_program::prog;
    // print_list_types(p::Toks);
    let prog: token [] => p::Toks;
    print_int(get_length(prog));
    print("\n");
    let g: gen => new_gen("test.c");
    // generate_array_funcs(g, "int");
    kill_generator(g);
}

//-----------------------------------------------------------------------------
