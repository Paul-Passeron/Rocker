//-----------------------------------------------------------------------------
//  ROCKER PARSER
//  MIT License
//  Copyright (c) 2024 Paul Passeron
//-----------------------------------------------------------------------------

include "RockerSRC/token.rkr"
include "RockerSRC/stdlib.rkr"
include "RockerSRC/ast.rkr"

rec parser => {
    Toks: token [],
    Prog: ast [],
    Cursor: int,
}

let new_parser(l: token []): parser => {
    let prog: ast [] => [];
    let res: parser => {
        Toks => l,
        Prog => prog,
        Cursor => 0
    };
    return res;
}

let peek_type(p: parser): token_type => {
    let tok: token => peek_token(p);
    return tok::Type;
}

let peek_token(p: parser): token => {
    let toks: token[] => p::Toks;
    return get(toks, p::Cursor);
}

let consume_token(p: parser): token => {
    let res: token => peek_token(p);
    p::Cursor => p::Cursor + 1;
    return res;
}

let parse_program(p: parser): void => {
    // implemented("parse_program");
}