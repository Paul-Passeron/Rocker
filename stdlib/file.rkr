//-----------------------------------------------------------------------------
//  ROCKER STANDARD LIBRARY
//  FILE UTILITIES
//  MIT License
//  Copyright (c) 2024 Paul Passeron
//-----------------------------------------------------------------------------

//-----------------------------------------------------------------------------
// FILE HANDLING
//-----------------------S------------------------------------------------------

rec file => {
    Filename: string,
    Data: string,
    Mode: int,
}


enum file_mode => {
    READ_MODE,
    WRITE_MODE,
    CLOSED
}


let open_file(filename: string, mode: file_mode): file => {
    let res: file => {
        Filename => filename,
        Data => "",
        Mode => mode
    }; 
    if mode = READ_MODE then  
        res::Data => read_file(filename);
    else if mode != WRITE_MODE then
    {
        print("Could not open file \'");
        print(filename);
        print("\': Invalid mode specified\n");
        exit(1);
    }
    return res;
}

let close_file(f: file): void => {
    if f::Mode = WRITE_MODE then
        write_string_to_file(f::Data, f::Filename);
    f::Data => "";
    f::Filename => "";
    f::Mode => CLOSED;
}

let get_file_contents(f: file): string => {
    if f::Mode != READ_MODE then {
        print_error();
        print("Cannot access contents of a file that is not opened or not readable\n");
        exit(1);
    }
    return f::Data;
}

let pfile(f: file, s: string): void => {
    f::Data => concat_string(f::Data, s);
}
//-----------------------------------------------------------------------------
